[[+ 2 [- 8 8]]]   ->   2 8 8 - + 
[[> 1 2]]   ->   1 2 > 
[[<= .02 1.102]]   ->   .02e 1.102e f<= 
[[!= 4 2][= 1 1]]   ->   4 2 <> 1 1 = 
[[and true false]]   ->   true false and 
[[not true]]   ->   true negate 
[[^ 1e3 2e1]]   ->   1e3 2e1 f** 
[[sin 2][cos 1.2]]   ->   2 s>f fsin 1.2e fcos 
[[- 2]]   ->   2 negate 
[[* 1.2E-1 1.5e2]]   ->   1.2e-1 1.5e2 f* 
[[+ 2 1.0]]   ->   2 s>f 1.0e f+ 
[[- 1.0]]   ->   1.0e fnegate 
[[stdout [/ 1 2]]]   ->   1 2 /  . 
[[stdout [+ 2 1.0]]]   ->   2 s>f 1.0e f+  f. 
[[stdout "hello world"]]   ->   s" hello world"  type 
[[stdout 1234]]   ->   1234  . 
[[stdout 12.34]]   ->   12.34e  f. 
[[stdout [+ 1 2]]]   ->   1 2 +  . 
[[stdout [+ 2 [- 8 8]]]]   ->   2 8 8 - +  . 
[[stdout [* 1.2E-1 1.5e2]]]   ->   1.2e-1 1.5e2 f*  f. 
[[stdout [+ [sin 2] [cos 1.2]]]]   ->   2 s>f fsin 1.2e fcos f+  f. 

input: parsing ./testfiles/stutest1.in
-----------------------------
[[stdout [+ 2 3]]]


output: 
-----------------------------
gforth code:

T->[S]
|
@--S -> expr
|  |
|  @--expr->stmts
|    |
|    @--stmts->printstmts
|      |
|      @--printstmts->[stdout oper]
|        |
|        @--('keyword', 'stdout')
|        @--oper->[binops oper oper]
|          |
|          @--('arithmatic_op', '+')
|          @--oper->constants
|            |
|            @--constants->ints
|              |
|              @--('int_number', '3')
|          @--oper->constants
|            |
|            @--constants->ints
|              |
|              @--('int_number', '2')
2 3 +  . CR bye
T->[S]
|
@--S -> expr
|  |
|  @--expr->stmts
|    |
|    @--stmts->printstmts
|      |
|      @--printstmts->[stdout oper]
|        |
|        @--('keyword', 'stdout')
|        @--oper->[binops oper oper]
|          |
|          @--('arithmatic_op', '+')
|          @--oper->constants
|            |
|            @--constants->ints
|              |
|              @--('int_number', '3')
|          @--oper->constants
|            |
|            @--constants->ints
|              |
|              @--('int_number', '2')
